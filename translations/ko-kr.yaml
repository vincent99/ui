---
languageName: "영어"
languageContribute: "Rancher 번역을 도와주세요"
generic:
  actions: 동작
  activate: 활성화
  all: 전체
  any: 아무거나
  cancel: 취소
  closeModal: 닫기
  cluster: 클러스터
  collapseAll: 모두 접기
  command: 명령어
  confirm: 확인
  containers: 컨테이너
  created: 생성됨
  default: 기본값
  description: 설명
  details: 상세 정보
  disable: 비활성화
  disabled: 비활성화됨
  dockerId: Docker ID
  domainName: 도메인 이름
  enable: 활성화
  enabled: 활성화됨
  entrypoint: Entrypoint
  environment: 환경
  expandAll: 모두 확장 
  hardware: 하드웨어
  healthy: 정상
  host: 호스트
  id: ID
  image: 이미지
  internal: 내부
  ipAddress: IP 주소
  limit: 제한
  limits: 제한
  loading: "로딩중..."
  mibibyte: 'MiB'
  missing: "*%MISSING% *"
  moreActions: 더 많은 작업
  na: '해당 없음'
  name: 이름
  no: "아니요"
  noRating: No Rating
  none: 없음
  ports: 포트
  remove: 제거
  role: 역할
  save: 저장
  saved: 저장됨
  saving: 저장 중
  search: 찾기
  seconds: 초
  select: 선택
  service: 서비스
  state: 상태
  test: 테스트
  testing: 테스트 중
  to: 에게
  total: 총합계
  type: 타입
  unknown: 알수 없음
  uuid: UUID
  yes: "예"
realmNames:
  all: 전체
  usWest: 미국 서부
  usEast: 미국 동부
  asia: 아시아
  euWest: 유럽 서부
  euEast: 유럽 동부
accountsPage:
  index:
    table:
      id: ID
      kind: 종류
      username: 사용자 이름
      identity: 신원
      noName: 없음
  new:
    form:
      username:
        placeholder: "예를 들어 jsmith"
      password:
        labelText: 암호
      name:
        placeholder: "예를 들어 존 스미스"
      type:
        labelText: 계정 유형
      description:
        labelText: 설명
        placeholder: "예: 이 계정은 Johon Smith 입니다."
apiPage:
  header: 환경 API 키
  actionButton: 환경 API 키 추가
  content: |
    이 환경(<code>{displayName}</code>)에 환경 API 키가 묶여있으며, 관련 자원만 제어할 수 있습니다.
    이 환경에 접근 가능한 다른 계정들도 이 키들을 관리할 수 있습니다.
  currentEndpoint: '엔드포인트'
  table:
    state: 상태
    name: 이름
    description: 설명
    publicValue: Access Key
    created: 생성됨
    noData: 이 환경에 대 한 열쇠는 아직 존재하지 않습니다.
    noName: 없음
    noDescription: 없음
    noPublicValue: 공개 값 없음
  account:
    header: 계정 API 키
    buttonText: 계정 API 키 추가
    content:
      paragraph1: 계정 API 키는 특정 계정과 연결되어 있습니다.
    table:
      noData: 해당 계정의 사용을 위한 Key가 아직 발부되지 않았습니다.
auditLogsPage:
  header: 감시 로그
  form:
    eventType:
      placeholder: 이벤트 유형
    resourceType:
      placeholder: "리소스 유형:"
      dropdownPlaceholder: '리소스 종류를 선택 합니다.'
    resourceId:
      placeholder: 리소스 ID
    requestIp:
      placeholder: IP 요청
    authType:
      placeholder: "인증 유형:"
      dropdownPlaceholder: '인증 유형을 선택 합니다.'
    clearButtonText: 필터 재설정
    searchButtonText: 검색
  table:
    time: 시간
    eventType: 이벤트 유형
    description: 상세내역
    environment: Environment
    resourceTypeId: "리소스 유형: ID"
    identity: 신원
    authIp: "인증 및 IP"
authPage:
  shibboleth:
    enabled:
      header: "{providerName} 활성화"
      authenticated:
        header:
          text: 인증
      disableAccess:
        disable: 액세스 제어 사용 안 함
      groupsField: '그룹'
      displayName: '사용자 이름'
      userName: '사용자 이름:'
      userId: '사용자 ID:'
    disabled:
      name:
        labelText: 표시 이름 필드
      username:
        labelText: 사용자 이름 필드
      uid:
        labelText: UID 필드
      groups:
        labelText: 그룹 필드
      testAuth:
        header: 'Test & 인증 활성화'
  root:
    header: Access Control
  github:
    standard: GitHub
    enterprise: GitHub Enterprise
    header:
      enabled:
        label: "{github} 활성화"
    authenticated:
      header:
        text: 인증
      disableAccess:
        disable: 액세스 제어 사용 안 함
    notAuthenticated:
      ul:
        li2:
          ul:
            li2: 홈페이지 URL
  azuread:
    configure:
      domain:
        label: 도메인
    test:
      password:
        label: 로그인 비밀 번호
      pre: Azure를 위한 인증
  0:
    header: 액세스 제어
catalogPage:
  index:
    filters:
      label: 카탈로그 필터
    certified:
      rancher:
        rancher: Rancher 연구소
        partner: 공식
      pl:
        rancher: 코어
        partner: 공식
    action:
      launch: 세부정보 보기
      alreadyDeployed: 이미 배포됨
certificatesPage:
  detail:
    header: '인증서: {name}'
  index:
    header: 인증서
    linkTo: 인증서 추가
  new:
    header: 인증서 추가
containerPage:
  header: '컨테이너: {name}'
  linksTab:
    header: 링크
  volumesTab:
    header: 볼륨
    table:
      path: 마운트 포인트
      writable: 쓰기가능
containersPage:
  table:
    sparkPrefixCpu: 'CPU: '
    sparkPrefixMemory: '메모리: '
    sparkPrefixNetwork: '네트워크: '
    sparkPrefixStorage: '저장소: '
  welcome:
    containerLink: 컨테이너 추가
    kubernetesLink: Kubernetes 설치
containerSubpod:
  childContainers: 컨테이너
editDns:
  mode:
    dnsservice: 하나 이상의 다른 서비스
    externalhostname: 외부 호스트 이름
  targetIp:
    label: 대상 IP 주소
    add: 대상 IP 주소 추가
  hostname:
    label: 대상 호스트 이름
    placeholder: '예: foobar.com'
editVolume:
  add:
    global: 볼륨 추가
    stack: 볼륨 템플릿 추가
  scope:
    label: Scope
    global: 전체 환경에 대한 하나의 볼륨
    stack: 특정 스택 내에서 하나의 볼륨
    container: 각 컨테이너에 대한 별도 볼륨
  driver:
    label: 드라이버
    local: 로컬 호스트 디스크
    nfs: Rancher NFS
    ebs: Rancher EBS
    efs: Rancher EFS
    longhorn: Rancher Longhorn
    custom:
      label: 사용자 지정
      placeholder: 사용자 지정 드라이버 이름
  driverOpts:
    label: 드라이버 옵션
    addAction: 옵션 추가
failWhalePage:
  header: 에러
  reloadButton: |
    <a href="#" onclick="window.location.href = window.location.href; return false;">리로드</a> 다시 시도
  logoutButton: 로그아웃
haPage:
  header: 고 가용성
  setup:
    prefix: "호스트 중 하나가 장애가 가는 경우에도 {appName} 계속 실행 되도록 여러 컨테이너를 서로 다른 호스트에 배포할 수 있습니다.  "
    link: 문서 보기
    suffix: " 설치 및 사용에 관한 정보."
  table:
    port: 포트
helpPage:
  environment:
    manageLink: 환경 설정
  stacks:
    addServiceLink: 서비스 관리
    addCatalogLink: 카탈로그에서 추가
  issues:
    content:
      graphic1:
        text: 버그를 찾으셨습니까?
  forums:
    tagline: 대화에 참여
    announcements:
      header: 공지사항
    general:
      header: 일반
      buttonText: 더 많은 일반 주제 보기
hostsPage:
  hostPage:
    limits:
      cpu: 'CPU 제한:'
      memory: '메모리 제한:'
    infoMultiStats:
      ip: 'IP'
      cpu: 'CPU'
      memory: '메모리'
      storage: '볼륨'
      kernel: '커널'
      docker: '도커:'
      os: 'OS'
      milliCpu:
        labelText: mCPU
    containersTab:
      header: 컨테이너
      detail: 이 호스트에서 실행 하는 컨테이너의 목록
    portsTab:
      header: 포트
registriesPage:
  new:
    form:
      username:
        labelText: 사용자 이름
        placeholder: '예: 사용자 이름'
      password:
        labelText: 비밀번호
servicePage:
  certsTab:
    title: 인증서
    default: 기본 인증서
  newBalancer:
    form:
      name:
        placeholder: 예. 웹사이트
  type:
    service: 서비스
    selectorservice: Selector
    loadbalancerservice: Load Balancer
    dnsservice: 별칭
    externalservice-ip: 외부 Ip
    externalservice-host: 외부 이름
    kubernetesservice: K8s 서비스
    networkdriverservice: 네트워크 서비스
    storagedriverservice: 스토리지 서비스
signupPage:
  form:
    button: 회원가입
    labels:
      loginUsername: 이름
      email: 이메일
  emailSuccess:
    confirm:
      resend: 이메일 다시 보내기
stackPage:
  loadBalancers:
    header: Load Balancers
userPreferencesPage:
  header: 환경 설정
  theme:
    header: 테마
    light: 밝은 테마
    auto: 자동
    autoDetail: 오전 6시 부터 오후 6 까지 자동으로 어두운 테마로 변경됩니다.
    dark: 어두운 테마
  generalInfo:
    header: 내 계정
    name:
      label: 이름
    username:
      label: 사용자 이름
    email:
      label: 이메일
processesPage:
  tab:
    summary: 요약
    running: 실행 중
    delayed: 지연 됨
    ready: 준비 됨
    completed: 최근에 완료됨
  summary:
    table:
      running: 실행 중
      ready: 준비 됨
      delay: 지연 됨
  pools:
    table:
      activeTasks: 활성화
  list:
    table:
      startTime: 시작 시간
      endTime: 종료 시간
      runTime: 실행 시간
verifyPage:
  account:
    linkText: 로그인
verifyResetPasswordPage:
  header: 비밀번호 초기화
  button: 비밀번호 변경
  success:
    header: 비밀번호 재설정 됨
    subtext: 로그인 페이지로 이동 하려면 아래 링크를 클릭 합니다.
    linkText: 로그인
servicePartial:
  noContainers:
    inactive:
      start: 시작
catalogSettings:
  more:
    addActionLabel: 카탈로그 추가
confirmDelete:
  confirmAction: 제거
  cancelAction: 취소
formBalancerRules:
  protocol:
    label: 프로토콜
formCommand:
  console:
    label: 콘솔
  autoRestart:
    label: 자동으로 다시 시작
    always: 항상
formContainerLinks:
  addActionLabel: 링크 추가
formDisks:
  name:
    label: 이름
  size:
    label: 크기
  driver:
    label: 드라이버
formEngineOpts:
  engineInstallUrl:
    recommended: 추천
    latest: 최근
  engineOpts:
    addActionLabel: 엔진 옵션 추가
  engineLabels:
    addActionLabel: 엔진 라벨 추가
formEnvVar:
  labels:
    key: 키
    value: 값
formKeyValue:
  key:
    label: 키
